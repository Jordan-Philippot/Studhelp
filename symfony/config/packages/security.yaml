security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
   
        admin_backoffice:
            anonymous: ~
            pattern: ^/admin
            provider: app_user_provider
            form_login:
                check_path: admin_login
                login_path: admin_login
            logout:
                path: admin_logout
                target: admin_login
            remember_me:
                secret: "%kernel.secret%"

        
        api_auth:
            pattern: ^/api/auth
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
       
        api:
            pattern: ^/api
            stateless: true
            anonymous: true
            json_login:
                check_path: api_login_check
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure


      
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication
            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, roles: ROLE_ADMIN }
        - { path: ^/api/auth, roles: IS_AUTHENTICATED_FULLY }
        
       
